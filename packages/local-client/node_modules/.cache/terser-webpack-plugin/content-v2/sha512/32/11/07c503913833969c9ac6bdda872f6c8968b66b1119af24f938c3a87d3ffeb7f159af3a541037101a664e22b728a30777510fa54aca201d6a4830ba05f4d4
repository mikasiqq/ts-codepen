{"code":"(this[\"webpackJsonpts-codepen\"]=this[\"webpackJsonpts-codepen\"]||[]).push([[288],{464:function(e,t){Prism.languages.monkey={string:/\"[^\"\\r\\n]*\"/,comment:[{pattern:/^#Rem\\s[\\s\\S]*?^#End/im,greedy:!0},{pattern:/'.+/,greedy:!0}],preprocessor:{pattern:/(^[ \\t]*)#.+/m,lookbehind:!0,alias:\"comment\"},function:/\\b\\w+(?=\\()/,\"type-char\":{pattern:/(\\w)[?%#$]/,lookbehind:!0,alias:\"variable\"},number:{pattern:/((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,lookbehind:!0},keyword:/\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,operator:/\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,punctuation:/[.,:;()\\[\\]]/}}}]);","name":"static/js/288.6b3e1fe2.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","monkey","string","comment","pattern","greedy","preprocessor","lookbehind","alias","function","number","keyword","operator","punctuation"],"sources":["static/js/288.6b3e1fe2.chunk.js"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9E,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,OAAS,CACvBC,OAAU,cACVC,QAAW,CAAC,CACVC,QAAS,yBACTC,QAAQ,GACP,CACDD,QAAS,MACTC,QAAQ,IAEVC,aAAgB,CACdF,QAAS,gBACTG,YAAY,EACZC,MAAO,WAETC,SAAY,cACZ,YAAa,CACXL,QAAS,aACTG,YAAY,EACZC,MAAO,YAETE,OAAU,CACRN,QAAS,qEACTG,YAAY,GAEdI,QAAW,uXACXC,SAAY,gFACZC,YAAe,eAGV"},"input":"(this[\"webpackJsonpts-codepen\"] = this[\"webpackJsonpts-codepen\"] || []).push([[288],{\n\n/***/ 464:\n/***/ (function(module, exports) {\n\nPrism.languages.monkey = {\n  'string': /\"[^\"\\r\\n]*\"/,\n  'comment': [{\n    pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n    greedy: true\n  }, {\n    pattern: /'.+/,\n    greedy: true\n  }],\n  'preprocessor': {\n    pattern: /(^[ \\t]*)#.+/m,\n    lookbehind: true,\n    alias: 'comment'\n  },\n  'function': /\\b\\w+(?=\\()/,\n  'type-char': {\n    pattern: /(\\w)[?%#$]/,\n    lookbehind: true,\n    alias: 'variable'\n  },\n  'number': {\n    pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n  'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n  'punctuation': /[.,:;()\\[\\]]/\n};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/node_modules/prismjs/components/prism-monkey.js"],"names":["Prism","languages","monkey","pattern","greedy","lookbehind","alias"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,MAAM,GAAG;EACxB,QAAQ,EAAE,aAAa;EACvB,SAAS,EAAE,CACV;IACCC,OAAO,EAAE,wBAAwB;IACjCC,MAAM,EAAE;EACT,CAAC,EACD;IACCD,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;EACT,CAAC,CACD;EACD,cAAc,EAAE;IACfD,OAAO,EAAE,eAAe;IACxBE,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;EACR,CAAC;EACD,UAAU,EAAE,aAAa;EACzB,WAAW,EAAE;IACZH,OAAO,EAAE,YAAY;IACrBE,UAAU,EAAE,IAAI;IAChBC,KAAK,EAAE;EACR,CAAC;EACD,QAAQ,EAAE;IACTH,OAAO,EAAE,oEAAoE;IAC7EE,UAAU,EAAE;EACb,CAAC;EACD,SAAS,EAAE,sXAAsX;EACjY,UAAU,EAAE,+EAA+E;EAC3F,aAAa,EAAE;AAChB,CAAC,C","file":"x","sourcesContent":["Prism.languages.monkey = {\n\t'string': /\"[^\"\\r\\n]*\"/,\n\t'comment': [\n\t\t{\n\t\t\tpattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /'.+/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'preprocessor': {\n\t\tpattern: /(^[ \\t]*)#.+/m,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\t'function': /\\b\\w+(?=\\()/,\n\t'type-char': {\n\t\tpattern: /(\\w)[?%#$]/,\n\t\tlookbehind: true,\n\t\talias: 'variable'\n\t},\n\t'number': {\n\t\tpattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n\t'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n\t'punctuation': /[.,:;()\\[\\]]/\n};\n"]}}