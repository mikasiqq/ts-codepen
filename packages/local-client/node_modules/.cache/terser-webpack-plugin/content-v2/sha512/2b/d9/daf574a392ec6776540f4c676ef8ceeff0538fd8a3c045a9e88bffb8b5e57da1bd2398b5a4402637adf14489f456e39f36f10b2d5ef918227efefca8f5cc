{"code":"(this[\"webpackJsonpts-codepen\"]=this[\"webpackJsonpts-codepen\"]||[]).push([[2],{178:function(n,t){!function(n){var t=\"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";n.languages.abnf={comment:/;.*/,string:{pattern:/(?:%[is])?\"[^\"\\n\\r]*\"/,greedy:!0,inside:{punctuation:/^%[is]/}},range:{pattern:/%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,alias:\"number\"},terminal:{pattern:/%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,alias:\"number\"},repetition:{pattern:/(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,lookbehind:!0,alias:\"operator\"},definition:{pattern:/(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,lookbehind:!0,alias:\"keyword\",inside:{punctuation:/<|>/}},\"core-rule\":{pattern:RegExp(\"(?:(^|[^<\\\\w-])\"+t+\"|<\"+t+\">)(?![\\\\w-])\",\"i\"),lookbehind:!0,alias:[\"rule\",\"constant\"],inside:{punctuation:/<|>/}},rule:{pattern:/(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,lookbehind:!0,inside:{punctuation:/<|>/}},operator:/=\\/?|\\//,punctuation:/[()\\[\\]]/}}(Prism)}}]);","name":"static/js/2.f8d9f94e.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","coreRules","languages","abnf","comment","string","pattern","greedy","inside","punctuation","range","alias","terminal","repetition","lookbehind","definition","RegExp","rule","operator"],"sources":["static/js/2.f8d9f94e.chunk.js"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,GAAG,CAE5E,IACA,SAAUC,EAAQC,IAExB,SAAWC,GACT,IAAIC,EAAY,qFAChBD,EAAME,UAAUC,KAAO,CACrBC,QAAW,MACXC,OAAU,CACRC,QAAS,wBACTC,QAAQ,EACRC,OAAQ,CACNC,YAAe,WAGnBC,MAAS,CACPJ,QAAS,iDACTK,MAAO,UAETC,SAAY,CACVN,QAAS,mEACTK,MAAO,UAETE,WAAc,CACZP,QAAS,6BACTQ,YAAY,EACZH,MAAO,YAETI,WAAc,CACZT,QAAS,iDACTQ,YAAY,EACZH,MAAO,UACPH,OAAQ,CACNC,YAAe,QAGnB,YAAa,CACXH,QAASU,OAAO,kBAAoBf,EAAY,KAAOA,EAAY,eAAgB,KACnFa,YAAY,EACZH,MAAO,CAAC,OAAQ,YAChBH,OAAQ,CACNC,YAAe,QAGnBQ,KAAQ,CACNX,QAAS,uCACTQ,YAAY,EACZN,OAAQ,CACNC,YAAe,QAGnBS,SAAY,UACZT,YAAe,WAElB,CAlDD,CAkDGT,MAEI"},"input":"(this[\"webpackJsonpts-codepen\"] = this[\"webpackJsonpts-codepen\"] || []).push([[2],{\n\n/***/ 178:\n/***/ (function(module, exports) {\n\n(function (Prism) {\n  var coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n  Prism.languages.abnf = {\n    'comment': /;.*/,\n    'string': {\n      pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n      greedy: true,\n      inside: {\n        'punctuation': /^%[is]/\n      }\n    },\n    'range': {\n      pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n      alias: 'number'\n    },\n    'terminal': {\n      pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n      alias: 'number'\n    },\n    'repetition': {\n      pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    'definition': {\n      pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n      lookbehind: true,\n      alias: 'keyword',\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'core-rule': {\n      pattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n      lookbehind: true,\n      alias: ['rule', 'constant'],\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'rule': {\n      pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n      lookbehind: true,\n      inside: {\n        'punctuation': /<|>/\n      }\n    },\n    'operator': /=\\/?|\\//,\n    'punctuation': /[()\\[\\]]/\n  };\n})(Prism);\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/node_modules/prismjs/components/prism-abnf.js"],"names":["Prism","coreRules","languages","abnf","pattern","greedy","inside","alias","lookbehind","RegExp"],"mappings":";;;;;AAAC,WAAUA,KAAK,EAAE;EAEjB,IAAIC,SAAS,GAAG,oFAAoF;EAEpGD,KAAK,CAACE,SAAS,CAACC,IAAI,GAAG;IACtB,SAAS,EAAE,KAAK;IAChB,QAAQ,EAAE;MACTC,OAAO,EAAE,uBAAuB;MAChCC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,OAAO,EAAE;MACRF,OAAO,EAAE,gDAAgD;MACzDG,KAAK,EAAE;IACR,CAAC;IACD,UAAU,EAAE;MACXH,OAAO,EAAE,kEAAkE;MAC3EG,KAAK,EAAE;IACR,CAAC;IACD,YAAY,EAAE;MACbH,OAAO,EAAE,4BAA4B;MACrCI,UAAU,EAAE,IAAI;MAChBD,KAAK,EAAE;IACR,CAAC;IACD,YAAY,EAAE;MACbH,OAAO,EAAE,gDAAgD;MACzDI,UAAU,EAAE,IAAI;MAChBD,KAAK,EAAE,SAAS;MAChBD,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,WAAW,EAAE;MACZF,OAAO,EAAEK,MAAM,CAAC,iBAAiB,GAAGR,SAAS,GAAG,IAAI,GAAGA,SAAS,GAAG,cAAc,EAAE,GAAG,CAAC;MACvFO,UAAU,EAAE,IAAI;MAChBD,KAAK,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;MAC3BD,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,MAAM,EAAE;MACPF,OAAO,EAAE,sCAAsC;MAC/CI,UAAU,EAAE,IAAI;MAChBF,MAAM,EAAE;QACP,aAAa,EAAE;MAChB;IACD,CAAC;IACD,UAAU,EAAE,SAAS;IACrB,aAAa,EAAE;EAChB,CAAC;AAEF,CAAC,EAACN,KAAK,CAAC,C","file":"x","sourcesContent":["(function (Prism) {\n\n\tvar coreRules = '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)';\n\n\tPrism.languages.abnf = {\n\t\t'comment': /;.*/,\n\t\t'string': {\n\t\t\tpattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^%[is]/\n\t\t\t}\n\t\t},\n\t\t'range': {\n\t\t\tpattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n\t\t\talias: 'number'\n\t\t},\n\t\t'terminal': {\n\t\t\tpattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n\t\t\talias: 'number'\n\t\t},\n\t\t'repetition': {\n\t\t\tpattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'operator'\n\t\t},\n\t\t'definition': {\n\t\t\tpattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'core-rule': {\n\t\t\tpattern: RegExp('(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])', 'i'),\n\t\t\tlookbehind: true,\n\t\t\talias: ['rule', 'constant'],\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'rule': {\n\t\t\tpattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /<|>/\n\t\t\t}\n\t\t},\n\t\t'operator': /=\\/?|\\//,\n\t\t'punctuation': /[()\\[\\]]/\n\t};\n\n}(Prism));\n"]}}