{"code":"(this[\"webpackJsonpts-codepen\"]=this[\"webpackJsonpts-codepen\"]||[]).push([[378],{554:function(e,t){Prism.languages.qore=Prism.languages.extend(\"clike\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,lookbehind:!0},string:{pattern:/(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:!0},keyword:/\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,boolean:/\\b(?:true|false)\\b/i,function:/\\$?\\b(?!\\d)\\w+(?=\\()/,number:/\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,lookbehind:!0},variable:/\\$(?!\\d)\\w+\\b/})}}]);","name":"static/js/378.f29742f7.chunk.js","map":{"version":3,"names":["this","push","module","exports","Prism","languages","qore","extend","comment","pattern","lookbehind","string","greedy","keyword","boolean","function","number","operator","variable"],"sources":["static/js/378.f29742f7.chunk.js"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9E,IACA,SAAUC,EAAQC,GAExBC,MAAMC,UAAUC,KAAOF,MAAMC,UAAUE,OAAO,QAAS,CACrDC,QAAW,CACTC,QAAS,6CACTC,YAAY,GAGdC,OAAU,CACRF,QAAS,mCACTG,QAAQ,GAEVC,QAAW,udACXC,QAAW,sBACXC,SAAY,uBACZC,OAAU,6GACVC,SAAY,CACVR,QAAS,8FACTC,YAAY,GAEdQ,SAAY,iBAGP"},"input":"(this[\"webpackJsonpts-codepen\"] = this[\"webpackJsonpts-codepen\"] || []).push([[378],{\n\n/***/ 554:\n/***/ (function(module, exports) {\n\nPrism.languages.qore = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  // Overridden to allow unescaped multi-line strings\n  'string': {\n    pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n  'boolean': /\\b(?:true|false)\\b/i,\n  'function': /\\$?\\b(?!\\d)\\w+(?=\\()/,\n  'number': /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n  'operator': {\n    pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n    lookbehind: true\n  },\n  'variable': /\\$(?!\\d)\\w+\\b/\n});\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/node_modules/prismjs/components/prism-qore.js"],"names":["Prism","languages","qore","extend","pattern","lookbehind","greedy"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAS,CAACC,IAAI,GAAGF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,OAAO,EAAE;EACtD,SAAS,EAAE;IACVC,OAAO,EAAE,4CAA4C;IACrDC,UAAU,EAAE;EACb,CAAC;EACD;EACA,QAAQ,EAAE;IACTD,OAAO,EAAE,kCAAkC;IAC3CE,MAAM,EAAE;EACT,CAAC;EACD,SAAS,EAAE,sdAAsd;EACje,SAAS,EAAE,qBAAqB;EAChC,UAAU,EAAE,sBAAsB;EAClC,QAAQ,EAAE,4GAA4G;EACtH,UAAU,EAAE;IACXF,OAAO,EAAE,6FAA6F;IACtGC,UAAU,EAAE;EACb,CAAC;EACD,UAAU,EAAE;AACb,CAAC,CAAC,C","file":"x","sourcesContent":["Prism.languages.qore = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n\t\tlookbehind: true\n\t},\n\t// Overridden to allow unescaped multi-line strings\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\tgreedy: true\n\t},\n\t'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/i,\n\t'function': /\\$?\\b(?!\\d)\\w+(?=\\()/,\n\t'number': /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n\t\tlookbehind: true\n\t},\n\t'variable': /\\$(?!\\d)\\w+\\b/\n});\n"]}}