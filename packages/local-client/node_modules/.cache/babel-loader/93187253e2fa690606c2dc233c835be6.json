{"ast":null,"code":"import\"./AddCell.css\";import{useActions}from\"../../hooks/useActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddCell=function AddCell(_ref){var forceVisible=_ref.forceVisible,prevCellId=_ref.prevCellId;var _useActions=useActions(),insertCellAfter=_useActions.insertCellAfter;return/*#__PURE__*/_jsxs(\"div\",{className:\"addCell \".concat(forceVisible&&\"forceVisible\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"addButtons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(prevCellId,\"code\");},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u041A\\u043E\\u0434\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"button is-rounded is-primary is-small\",onClick:function onClick(){return insertCellAfter(prevCellId,\"text\");},children:[/*#__PURE__*/_jsx(\"span\",{className:\"icon is-small\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u0422\\u0435\\u043A\\u0441\\u0442\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"divider\"})]});};export default AddCell;","map":{"version":3,"names":["useActions","AddCell","forceVisible","prevCellId","insertCellAfter"],"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/src/components/AddCell/AddCell.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport \"./AddCell.css\";\nimport { useActions } from \"../../hooks/useActions\";\n\ninterface AddCellProps {\n  prevCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell: FC<AddCellProps> = ({ forceVisible, prevCellId }) => {\n  const { insertCellAfter } = useActions();\n  return (\n    <div className={`addCell ${forceVisible && \"forceVisible\"}`}>\n      <div className=\"addButtons\">\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(prevCellId, \"code\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\" />\n          </span>\n          <span>Код</span>\n        </button>\n        <button\n          className=\"button is-rounded is-primary is-small\"\n          onClick={() => insertCellAfter(prevCellId, \"text\")}\n        >\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-plus\" />\n          </span>\n          <span>Текст</span>\n        </button>\n      </div>\n      <div className=\"divider\"></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n"],"mappings":"AACA,MAAO,eAAe,CACtB,OAASA,UAAU,KAAQ,wBAAwB,CAAC,wFAOpD,GAAMC,QAAyB,CAAG,QAA5BA,QAAyB,MAAqC,IAA/BC,aAAY,MAAZA,YAAY,CAAEC,UAAU,MAAVA,UAAU,CAC3D,gBAA4BH,UAAU,EAAE,CAAhCI,eAAe,aAAfA,eAAe,CACvB,mBACE,aAAK,SAAS,mBAAaF,YAAY,EAAI,cAAc,CAAG,wBAC1D,aAAK,SAAS,CAAC,YAAY,wBACzB,gBACE,SAAS,CAAC,uCAAuC,CACjD,OAAO,CAAE,yBAAME,gBAAe,CAACD,UAAU,CAAE,MAAM,CAAC,EAAC,wBAEnD,aAAM,SAAS,CAAC,eAAe,uBAC7B,UAAG,SAAS,CAAC,aAAa,EAAG,EACxB,cACP,4CAAgB,GACT,cACT,gBACE,SAAS,CAAC,uCAAuC,CACjD,OAAO,CAAE,yBAAMC,gBAAe,CAACD,UAAU,CAAE,MAAM,CAAC,EAAC,wBAEnD,aAAM,SAAS,CAAC,eAAe,uBAC7B,UAAG,SAAS,CAAC,aAAa,EAAG,EACxB,cACP,wDAAkB,GACX,GACL,cACN,YAAK,SAAS,CAAC,SAAS,EAAO,GAC3B,CAEV,CAAC,CAED,cAAeF,QAAO"},"metadata":{},"sourceType":"module"}