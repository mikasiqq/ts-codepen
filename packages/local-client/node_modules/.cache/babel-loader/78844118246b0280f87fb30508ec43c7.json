{"ast":null,"code":"var _jsxFileName = \"/Users/gleb/Desktop/study/react/ts-codepen/src/components/CodeWrapper/CodeWrapper.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\nimport Preview from \"../Preview/Preview\";\nimport Resizable from \"../Resizable/Resizable\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport \"./CodeWrapper.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeWrapper = _ref => {\n  _s();\n  let {\n    cell\n  } = _ref;\n  const {\n    updateCell,\n    createBundle\n  } = useActions();\n  const bundle = useTypedSelector(state => state.bundles[cell.id]);\n  const cumulativeCode = useTypedSelector(state => {\n    const {\n      data,\n      order\n    } = state.cells;\n    const orderedCells = order.map(id => data[id]);\n    const cumulativeCode = [`\n        const show = (value) => {\n          if (typeof value === 'object') {\n            if (value.$$typeof && value.props) {\n              ReactDOM.render(value,document.querySelector(\"#root\"));\n            } else {\n              document.querySelector(\"#root\").innerHTML = JSON.stringify(value);\n            }\n          } else {\n            document.querySelector(\"#root\").innerHTML = value;\n          }\n        };\n      `];\n    for (let c of orderedCells) {\n      if (c.type === \"code\") {\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cell.id) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  });\n  useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, cumulativeCode.join(\"\\n\"));\n      return;\n    }\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, cumulativeCode.join(\"\\n\"));\n    }, 1000);\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cumulativeCode.join(\"\\n\"), cell.id, createBundle]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"calc(100% - 10px)\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: cell.content,\n          onChange: value => updateCell(cell.id, value || \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progressWrapper\",\n        children: !bundle || bundle.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progressCover\",\n          children: /*#__PURE__*/_jsxDEV(\"progress\", {\n            className: \"progress is-small is-primary\",\n            max: \"100\",\n            children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Preview, {\n          code: bundle.code,\n          bundlingStatus: bundle.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeWrapper, \"r5M9pii0T6hMXRNyIRC8DN3Hi6E=\", false, function () {\n  return [useActions, useTypedSelector, useTypedSelector];\n});\n_c = CodeWrapper;\nexport default CodeWrapper;\nvar _c;\n$RefreshReg$(_c, \"CodeWrapper\");","map":{"version":3,"names":["React","useEffect","CodeEditor","Preview","Resizable","useActions","useTypedSelector","CodeWrapper","cell","updateCell","createBundle","bundle","state","bundles","id","cumulativeCode","data","order","cells","orderedCells","map","c","type","push","content","join","timer","setTimeout","clearTimeout","height","display","flexDirection","value","loading","code","error"],"sources":["/Users/gleb/Desktop/study/react/ts-codepen/src/components/CodeWrapper/CodeWrapper.tsx"],"sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport CodeEditor from \"../CodeEditor/CodeEditor\";\nimport Preview from \"../Preview/Preview\";\nimport Resizable from \"../Resizable/Resizable\";\nimport { Cell } from \"../../store/cell\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport \"./CodeWrapper.css\";\n\ninterface CodeWrapperProps {\n  cell: Cell;\n}\n\nconst CodeWrapper: FC<CodeWrapperProps> = ({ cell }) => {\n  const { updateCell, createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n  const cumulativeCode = useTypedSelector((state) => {\n    const { data, order } = state.cells;\n    const orderedCells = order.map((id) => data[id]);\n\n    const cumulativeCode = [\n      `\n        const show = (value) => {\n          if (typeof value === 'object') {\n            if (value.$$typeof && value.props) {\n              ReactDOM.render(value,document.querySelector(\"#root\"));\n            } else {\n              document.querySelector(\"#root\").innerHTML = JSON.stringify(value);\n            }\n          } else {\n            document.querySelector(\"#root\").innerHTML = value;\n          }\n        };\n      `,\n    ];\n    for (let c of orderedCells) {\n      if (c.type === \"code\") {\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cell.id) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  });\n\n  useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, cumulativeCode.join(\"\\n\"));\n      return;\n    }\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, cumulativeCode.join(\"\\n\"));\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cumulativeCode.join(\"\\n\"), cell.id, createBundle]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          height: \"calc(100% - 10px)\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value || \"\")}\n          />\n        </Resizable>\n        <div className=\"progressWrapper\">\n          {!bundle || bundle.loading ? (\n            <div className=\"progressCover\">\n              <progress className=\"progress is-small is-primary\" max=\"100\">\n                Загрузка\n              </progress>\n            </div>\n          ) : (\n            <Preview code={bundle.code} bundlingStatus={bundle.error} />\n          )}\n        </div>\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeWrapper;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}