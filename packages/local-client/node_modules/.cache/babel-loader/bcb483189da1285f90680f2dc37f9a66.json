{"ast":null,"code":"import { ActionType } from \"../action-types\";\nimport { saveCells } from \"../action-creators\";\nexport const persistMiddleware = _ref => {\n  let {\n    dispatch,\n    getState\n  } = _ref;\n  return next => {\n    return action => {\n      next(action);\n      if ([ActionType.MOVE_CELL, ActionType.UPDATE_CELL, ActionType.INSERT_CELL_AFTER, ActionType.DELETE_CELL].includes(action.type)) {\n        saveCells()(dispatch);\n      }\n    };\n  };\n};","map":{"version":3,"names":["ActionType","saveCells","persistMiddleware","dispatch","getState","next","action","MOVE_CELL","UPDATE_CELL","INSERT_CELL_AFTER","DELETE_CELL","includes","type"],"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/src/store/middlewares/persist-middleware.ts"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport { Action } from \"../actions\";\nimport { ActionType } from \"../action-types\";\nimport { saveCells } from \"../action-creators\";\nimport { RootState } from \"../reducers\";\n\nexport const persistMiddleware = ({\n  dispatch,\n  getState,\n}: {\n  dispatch: Dispatch<Action>;\n  getState: () => RootState;\n}) => {\n  return (next: (action: Action) => void) => {\n    return (action: Action) => {\n      next(action);\n\n      if (\n        [\n          ActionType.MOVE_CELL,\n          ActionType.UPDATE_CELL,\n          ActionType.INSERT_CELL_AFTER,\n          ActionType.DELETE_CELL,\n        ].includes(action.type)\n      ) {\n        saveCells()(dispatch);\n      }\n    };\n  };\n};\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,oBAAoB;AAG9C,OAAO,MAAMC,iBAAiB,GAAG,QAM3B;EAAA,IAN4B;IAChCC,QAAQ;IACRC;EAIF,CAAC;EACC,OAAQC,IAA8B,IAAK;IACzC,OAAQC,MAAc,IAAK;MACzBD,IAAI,CAACC,MAAM,CAAC;MAEZ,IACE,CACEN,UAAU,CAACO,SAAS,EACpBP,UAAU,CAACQ,WAAW,EACtBR,UAAU,CAACS,iBAAiB,EAC5BT,UAAU,CAACU,WAAW,CACvB,CAACC,QAAQ,CAACL,MAAM,CAACM,IAAI,CAAC,EACvB;QACAX,SAAS,EAAE,CAACE,QAAQ,CAAC;MACvB;IACF,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}