{"ast":null,"code":"var _jsxFileName = \"/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/src/components/CellList/CellList.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport AddCell from \"../AddCell/AddCell\";\nimport CellListItem from \"./CellListItem\";\nimport \"./CellList.css\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellList = () => {\n  _s();\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const {\n    fetchCells,\n    saveCells\n  } = useActions();\n  useEffect(() => {\n    fetchCells();\n  }, []);\n  useEffect(() => {\n    fetchCells();\n  }, []);\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCell, {\n      prevCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cellList\",\n    children: [/*#__PURE__*/_jsxDEV(AddCell, {\n      forceVisible: cells.length === 0,\n      prevCellId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), renderedCells]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CellList, \"0VmEwIaPhlcbGqIPAcmmtFyi0uw=\", false, function () {\n  return [useTypedSelector, useActions];\n});\n_c = CellList;\nexport default CellList;\nvar _c;\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"names":["Fragment","useEffect","useTypedSelector","AddCell","CellListItem","useActions","CellList","cells","order","data","map","id","fetchCells","saveCells","renderedCells","cell","length"],"sources":["/Users/gleb/Desktop/study/react/ts-prod/ts-codepen/packages/local-client/src/components/CellList/CellList.tsx"],"sourcesContent":["import { FC, Fragment, useEffect } from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport AddCell from \"../AddCell/AddCell\";\nimport CellListItem from \"./CellListItem\";\nimport \"./CellList.css\";\nimport { useActions } from \"../../hooks/useActions\";\n\nconst CellList: FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  );\n\n  const { fetchCells, saveCells } = useActions();\n\n  useEffect(() => {\n    fetchCells();\n  }, []);\n\n  useEffect(() => {\n    fetchCells();\n  }, []);\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} />\n      <AddCell prevCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div className=\"cellList\">\n      <AddCell forceVisible={cells.length === 0} prevCellId={null} />\n      {renderedCells}\n    </div>\n  );\n};\n\nexport default CellList;\n"],"mappings":";;AAAA,SAAaA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/C,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,gBAAgB;AACvB,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAEpD,MAAMC,QAAY,GAAG,MAAM;EAAA;EACzB,MAAMC,KAAK,GAAGL,gBAAgB,CAAC;IAAA,IAAC;MAAEK,KAAK,EAAE;QAAEC,KAAK;QAAEC;MAAK;IAAE,CAAC;IAAA,OACxDD,KAAK,CAACE,GAAG,CAAEC,EAAE,IAAKF,IAAI,CAACE,EAAE,CAAC,CAAC;EAAA,EAC5B;EAED,MAAM;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGR,UAAU,EAAE;EAE9CJ,SAAS,CAAC,MAAM;IACdW,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdW,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAGP,KAAK,CAACG,GAAG,CAAEK,IAAI,iBACnC,QAAC,QAAQ;IAAA,wBACP,QAAC,YAAY;MAAC,IAAI,EAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5B,QAAC,OAAO;MAAC,UAAU,EAAEA,IAAI,CAACJ;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,GAFnBI,IAAI,CAACJ,EAAE;IAAA;IAAA;IAAA;EAAA,QAIvB,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB,QAAC,OAAO;MAAC,YAAY,EAAEJ,KAAK,CAACS,MAAM,KAAK,CAAE;MAAC,UAAU,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9DF,aAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEV,CAAC;AAAC,GA5BIR,QAAY;EAAA,QACFJ,gBAAgB,EAIIG,UAAU;AAAA;AAAA,KALxCC,QAAY;AA8BlB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}