{"ast":null,"code":"var _jsxFileName = \"/Users/gleb/Desktop/study/react/ts-codepen/src/components/Preview.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport \"./Preview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst html = `\n  <html>\n    <head>\n      <style>html { background-color: white; }</style>\n    </head>\n    <body>\n      <div id=\"root\"></div>\n      <script>\n        const handleError = (error) => {\n          const root = document.querySelector('#root')\n          root.innerHTML = '<div style=\"color: rgb(215, 56, 88), font-family: \"Lato\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\"><h4 style=\"margin: 5px 0\">Runtime error</h4>' + error + '</div>'\n          console.error(error);\n        }\n\n        window.addEventListener('error', (event) => {\n          event.preventDefault()\n          handleError(event.error)\n        })\n\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data)\n          } catch (error) {\n            handleError(error)\n          }\n        }, false)\n      </script>\n    </body>\n  </html>\n`;\nconst Preview = _ref => {\n  _s();\n  let {\n    code,\n    bundlingStatus\n  } = _ref;\n  const frame = useRef();\n  useEffect(() => {\n    frame.current.srcdoc = html;\n    setTimeout(() => {\n      frame.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"previewWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"Code Preview\",\n      ref: frame,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), bundlingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"previewError\",\n      children: bundlingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Preview, \"GrNPVr5X+L+veAMr8WB4nRT2xOQ=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["useEffect","useRef","html","Preview","code","bundlingStatus","frame","current","srcdoc","setTimeout","contentWindow","postMessage"],"sources":["/Users/gleb/Desktop/study/react/ts-codepen/src/components/Preview.tsx"],"sourcesContent":["import { FC, useEffect, useRef } from \"react\";\nimport \"./Preview.css\";\ninterface PreviewProps {\n  code: string;\n  bundlingStatus: string;\n}\n\nconst html = `\n  <html>\n    <head>\n      <style>html { background-color: white; }</style>\n    </head>\n    <body>\n      <div id=\"root\"></div>\n      <script>\n        const handleError = (error) => {\n          const root = document.querySelector('#root')\n          root.innerHTML = '<div style=\"color: rgb(215, 56, 88), font-family: \"Lato\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\"><h4 style=\"margin: 5px 0\">Runtime error</h4>' + error + '</div>'\n          console.error(error);\n        }\n\n        window.addEventListener('error', (event) => {\n          event.preventDefault()\n          handleError(event.error)\n        })\n\n        window.addEventListener('message', (event) => {\n          try {\n            eval(event.data)\n          } catch (error) {\n            handleError(error)\n          }\n        }, false)\n      </script>\n    </body>\n  </html>\n`;\n\nconst Preview: FC<PreviewProps> = ({ code, bundlingStatus }) => {\n  const frame = useRef<any>();\n\n  useEffect(() => {\n    frame.current.srcdoc = html;\n    setTimeout(() => {\n      frame.current.contentWindow.postMessage(code, \"*\");\n    }, 50);\n  }, [code]);\n\n  return (\n    <div className=\"previewWrapper\">\n      <iframe\n        title=\"Code Preview\"\n        ref={frame}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n      {bundlingStatus && <div className=\"previewError\">{bundlingStatus}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC7C,OAAO,eAAe;AAAC;AAMvB,MAAMC,IAAI,GAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,OAAyB,GAAG,QAA8B;EAAA;EAAA,IAA7B;IAAEC,IAAI;IAAEC;EAAe,CAAC;EACzD,MAAMC,KAAK,GAAGL,MAAM,EAAO;EAE3BD,SAAS,CAAC,MAAM;IACdM,KAAK,CAACC,OAAO,CAACC,MAAM,GAAGN,IAAI;IAC3BO,UAAU,CAAC,MAAM;MACfH,KAAK,CAACC,OAAO,CAACG,aAAa,CAACC,WAAW,CAACP,IAAI,EAAE,GAAG,CAAC;IACpD,CAAC,EAAE,EAAE,CAAC;EACR,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MACE,KAAK,EAAC,cAAc;MACpB,GAAG,EAAEE,KAAM;MACX,OAAO,EAAC,eAAe;MACvB,MAAM,EAAEJ;IAAK;MAAA;MAAA;MAAA;IAAA,QACb,EACDG,cAAc,iBAAI;MAAK,SAAS,EAAC,cAAc;MAAA,UAAEA;IAAc;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEV,CAAC;AAAC,GArBIF,OAAyB;AAAA,KAAzBA,OAAyB;AAuB/B,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}