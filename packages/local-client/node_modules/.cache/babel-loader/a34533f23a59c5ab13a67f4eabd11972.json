{"ast":null,"code":"var _jsxFileName = \"/Users/gleb/Desktop/study/react/ts-codepen/src/components/CellList/CellList.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport AddCell from \"../AddCell/AddCell\";\nimport CellListItem from \"./CellListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CellList = () => {\n  _s();\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCell, {\n      nextCellId: cell.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CellListItem, {\n      cell: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, cell.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderedCells, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cells.length === 0 ? \"forceVisible\" : \"\",\n      children: /*#__PURE__*/_jsxDEV(AddCell, {\n        nextCellId: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n_c = CellList;\nexport default CellList;\nvar _c;\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"names":["Fragment","useTypedSelector","AddCell","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell","length"],"sources":["/Users/gleb/Desktop/study/react/ts-codepen/src/components/CellList/CellList.tsx"],"sourcesContent":["import { FC, Fragment } from \"react\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport AddCell from \"../AddCell/AddCell\";\nimport CellListItem from \"./CellListItem\";\n\nconst CellList: FC = () => {\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\n    order.map((id) => data[id])\n  );\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <AddCell nextCellId={cell.id} />\n      <CellListItem cell={cell} />\n    </Fragment>\n  ));\n\n  return (\n    <div>\n      {renderedCells}\n      <div className={cells.length === 0 ? \"forceVisible\" : \"\"}>\n        <AddCell nextCellId={null} />\n      </div>\n    </div>\n  );\n};\n\nexport default CellList;\n"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AACpC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,QAAY,GAAG,MAAM;EAAA;EACzB,MAAMC,KAAK,GAAGJ,gBAAgB,CAAC;IAAA,IAAC;MAAEI,KAAK,EAAE;QAAEC,KAAK;QAAEC;MAAK;IAAE,CAAC;IAAA,OACxDD,KAAK,CAACE,GAAG,CAAEC,EAAE,IAAKF,IAAI,CAACE,EAAE,CAAC,CAAC;EAAA,EAC5B;EAED,MAAMC,aAAa,GAAGL,KAAK,CAACG,GAAG,CAAEG,IAAI,iBACnC,QAAC,QAAQ;IAAA,wBACP,QAAC,OAAO;MAAC,UAAU,EAAEA,IAAI,CAACF;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC,QAAC,YAAY;MAAC,IAAI,EAAEE;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,GAFfA,IAAI,CAACF,EAAE;IAAA;IAAA;IAAA;EAAA,QAIvB,CAAC;EAEF,oBACE;IAAA,WACGC,aAAa,eACd;MAAK,SAAS,EAAEL,KAAK,CAACO,MAAM,KAAK,CAAC,GAAG,cAAc,GAAG,EAAG;MAAA,uBACvD,QAAC,OAAO;QAAC,UAAU,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GApBIR,QAAY;EAAA,QACFH,gBAAgB;AAAA;AAAA,KAD1BG,QAAY;AAsBlB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}