{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport \"./Child.css\";\nimport Toolbar from './';\nexport default function Child(props) {\n  var _ref = props || {},\n    prefixCls = _ref.prefixCls,\n    _ref$active = _ref.active,\n    active = _ref$active === void 0 ? {} : _ref$active,\n    groupName = _ref.groupName,\n    commands = _ref.commands,\n    children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-toolbar-child \").concat(groupName && active[groupName] ? 'active' : ''),\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    }\n  }, Array.isArray(commands) ? /*#__PURE__*/React.createElement(Toolbar, _extends({\n    commands: commands\n  }, props, {\n    groupName: groupName\n  })) : children);\n}","map":{"version":3,"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AACA,OAAOC,OAAP,MAAuC,IAAvC;AAMA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAkC;EAAA,WACmBA,KAAK,IAAI,EAD5B;IACvCC,SADuC,QACvCA,SADuC;IAAAC,mBAC5BC,MAD4B;IAC5BA,MAD4B,4BACnB,EADmB;IACfC,SADe,QACfA,SADe;IACJC,QADI,QACJA,QADI;IACMC,QADN,QACMA,QADN;EAE/C,oBACET;IAAKU,SAAS,YAAKN,SAAL,4BAAgCG,SAAS,IAAID,MAAM,CAACC,SAAD,CAAnB,GAAiC,QAAjC,GAA4C,EAA5E,CAAd;IAAgGI,OAAO,EAAE,iBAACC,CAAD;MAAA,OAAOA,CAAC,CAACC,eAAF,EAAP;IAAA;EAAzG,GACGC,KAAK,CAACC,OAAN,CAAcP,QAAd,iBACCR,oBAACC,OAAD;IAASO,QAAQ,EAAEA;EAAnB,GAAiCL,KAAjC;IAAwCI,SAAS,EAAEA;EAAnD,GADD,GAEGE,QAHN,CADF;AAOD","names":["React","Toolbar","Child","props","prefixCls","_ref$active","active","groupName","commands","children","className","onClick","e","stopPropagation","Array","isArray"],"sources":["../../../../src/components/Toolbar/Child.tsx"],"sourcesContent":["import React from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\n\nexport type ChildProps = IToolbarProps  & {\n  children?: any;\n}\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, active = {}, groupName, commands, children } = props || {};\n  return (\n    <div className={`${prefixCls}-toolbar-child ${groupName && active[groupName] ? 'active' : ''}`} onClick={(e) => e.stopPropagation()}>\n      {Array.isArray(commands) ? (\n        <Toolbar commands={commands} {...props} groupName={groupName} />\n      ) : children}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}